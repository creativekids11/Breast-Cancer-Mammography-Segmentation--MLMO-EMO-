name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
        pip install -r requirements.txt
    
    - name: Test model creation
      run: |
        python examples/quick_test.py
    
    - name: Check code style (if linting enabled)
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 pylint
    
    - name: Run Black
      run: black --check --diff .
      continue-on-error: true
    
    - name: Run Flake8
      run: flake8 . --count --max-line-length=100 --statistics
      continue-on-error: true

  build-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Check documentation files
      run: |
        test -f README.md
        test -f docs/MLMO_EMO_DOCUMENTATION.md
        test -f docs/PREPROCESSING_DOCUMENTATION.md
        test -f docs/QUICK_REFERENCE.md
        echo "âœ“ All documentation files present"
